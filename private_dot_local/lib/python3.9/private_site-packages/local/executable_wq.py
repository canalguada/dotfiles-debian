#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim: set ft=python ai ts=4 sw=4 tw=79:

# pylint: disable=missing-module-docstring,missing-function-docstring
# pylint: disable=invalid-name

import os
import sys
import time
import textwrap
import random
import click
from wikiquote import (
    random_titles,
    search,
    quotes,
    qotd,
    DisambiguationPageException,
    NoSuchPageException,
)

PROGNAME = "wq"
VERSION = "0.1"


def pretty(quote: str, title: str):
    for line in quote.split("\n"):
        text = "\n".join(textwrap.wrap(line, width=75))
    length = max(map(len, text.split("\n")))
    footer = f"%{length}s" % f"--- {title}"
    return "\n".join([text, footer])


@click.group(help="A program to see quotes from Wikiquote")
@click.version_option(version=VERSION, prog_name=PROGNAME)
@click.option(
    "--lang",
    help="Search for this language",
    type=click.Choice(
        ["en", "es", "de", "fr", "it", "pl", "pt"], case_sensitive=False
    ),
    default="fr",
)
@click.pass_context
def wq(ctx, lang):
    # ensure that ctx.obj exists and is a dict
    ctx.ensure_object(dict)

    ctx.obj["lang"] = lang


@wq.command("random", help="Show random quote for given page title")
@click.option("--title", help="Search for this page title", default="")
@click.pass_context
def get_random(ctx, title):
    titles = (
        random_titles(lang=ctx.obj["lang"])
        if not title
        else search(title, lang=ctx.obj["lang"])
    )
    if titles:
        try:
            quote = random.choice(quotes(titles[0], lang=ctx.obj["lang"]))
            print(pretty(quote, titles[0]))
        except DisambiguationPageException:
            return 2
        except NoSuchPageException:
            return 1
    return 0


@wq.command("qotd", help="Show quote of the day")
@click.pass_context
def get_qotd(ctx):
    path = os.path.join(os.environ["HOME"], ".qotd")
    if not os.path.exists(path) or os.stat(path).st_mtime < (
            time.time() - (24 * 3600)
    ):
        quote, title = qotd(lang=ctx.obj["lang"])
        text = pretty(quote, title)
        print(text, file=open(path, mode="w"))
    else:
        # Read quote from file
        print("Found previous ~/.qotd", file=sys.stderr)
    # os.system(f'cat {path}')
    with open(path, mode="r") as fd:
        while line := fd.readline().strip("\n"):
            print(line)
    return 0


if __name__ == "__main__":
    # pylint: disable=unexpected-keyword-arg,no-value-for-parameter
    wq(obj={})
